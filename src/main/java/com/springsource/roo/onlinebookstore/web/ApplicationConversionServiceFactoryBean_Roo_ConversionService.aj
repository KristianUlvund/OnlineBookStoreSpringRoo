// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package com.springsource.roo.onlinebookstore.web;

import com.springsource.roo.onlinebookstore.domain.Author;
import com.springsource.roo.onlinebookstore.domain.Books;
import com.springsource.roo.onlinebookstore.domain.Categories;
import com.springsource.roo.onlinebookstore.domain.Orders;
import com.springsource.roo.onlinebookstore.domain.Shipping;
import com.springsource.roo.onlinebookstore.web.ApplicationConversionServiceFactoryBean;
import org.springframework.beans.factory.annotation.Configurable;
import org.springframework.core.convert.converter.Converter;
import org.springframework.format.FormatterRegistry;

privileged aspect ApplicationConversionServiceFactoryBean_Roo_ConversionService {
    
    declare @type: ApplicationConversionServiceFactoryBean: @Configurable;
    
    public Converter<Author, String> ApplicationConversionServiceFactoryBean.getAuthorToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<com.springsource.roo.onlinebookstore.domain.Author, java.lang.String>() {
            public String convert(Author author) {
                return new StringBuilder().append(author.getName()).append(' ').append(author.getAge()).toString();
            }
        };
    }
    
    public Converter<Long, Author> ApplicationConversionServiceFactoryBean.getIdToAuthorConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Long, com.springsource.roo.onlinebookstore.domain.Author>() {
            public com.springsource.roo.onlinebookstore.domain.Author convert(java.lang.Long id) {
                return Author.findAuthor(id);
            }
        };
    }
    
    public Converter<String, Author> ApplicationConversionServiceFactoryBean.getStringToAuthorConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, com.springsource.roo.onlinebookstore.domain.Author>() {
            public com.springsource.roo.onlinebookstore.domain.Author convert(String id) {
                return getObject().convert(getObject().convert(id, Long.class), Author.class);
            }
        };
    }
    
    public Converter<Books, String> ApplicationConversionServiceFactoryBean.getBooksToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<com.springsource.roo.onlinebookstore.domain.Books, java.lang.String>() {
            public String convert(Books books) {
                return new StringBuilder().append(books.getTitle()).append(' ').append(books.getISBN()).append(' ').append(books.getCost()).append(' ').append(books.getQuantity()).toString();
            }
        };
    }
    
    public Converter<Long, Books> ApplicationConversionServiceFactoryBean.getIdToBooksConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Long, com.springsource.roo.onlinebookstore.domain.Books>() {
            public com.springsource.roo.onlinebookstore.domain.Books convert(java.lang.Long id) {
                return Books.findBooks(id);
            }
        };
    }
    
    public Converter<String, Books> ApplicationConversionServiceFactoryBean.getStringToBooksConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, com.springsource.roo.onlinebookstore.domain.Books>() {
            public com.springsource.roo.onlinebookstore.domain.Books convert(String id) {
                return getObject().convert(getObject().convert(id, Long.class), Books.class);
            }
        };
    }
    
    public Converter<Categories, String> ApplicationConversionServiceFactoryBean.getCategoriesToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<com.springsource.roo.onlinebookstore.domain.Categories, java.lang.String>() {
            public String convert(Categories categories) {
                return new StringBuilder().append(categories.getName()).toString();
            }
        };
    }
    
    public Converter<Long, Categories> ApplicationConversionServiceFactoryBean.getIdToCategoriesConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Long, com.springsource.roo.onlinebookstore.domain.Categories>() {
            public com.springsource.roo.onlinebookstore.domain.Categories convert(java.lang.Long id) {
                return Categories.findCategories(id);
            }
        };
    }
    
    public Converter<String, Categories> ApplicationConversionServiceFactoryBean.getStringToCategoriesConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, com.springsource.roo.onlinebookstore.domain.Categories>() {
            public com.springsource.roo.onlinebookstore.domain.Categories convert(String id) {
                return getObject().convert(getObject().convert(id, Long.class), Categories.class);
            }
        };
    }
    
    public Converter<Orders, String> ApplicationConversionServiceFactoryBean.getOrdersToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<com.springsource.roo.onlinebookstore.domain.Orders, java.lang.String>() {
            public String convert(Orders orders) {
                return "(no displayable fields)";
            }
        };
    }
    
    public Converter<Long, Orders> ApplicationConversionServiceFactoryBean.getIdToOrdersConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Long, com.springsource.roo.onlinebookstore.domain.Orders>() {
            public com.springsource.roo.onlinebookstore.domain.Orders convert(java.lang.Long id) {
                return Orders.findOrders(id);
            }
        };
    }
    
    public Converter<String, Orders> ApplicationConversionServiceFactoryBean.getStringToOrdersConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, com.springsource.roo.onlinebookstore.domain.Orders>() {
            public com.springsource.roo.onlinebookstore.domain.Orders convert(String id) {
                return getObject().convert(getObject().convert(id, Long.class), Orders.class);
            }
        };
    }
    
    public Converter<Shipping, String> ApplicationConversionServiceFactoryBean.getShippingToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<com.springsource.roo.onlinebookstore.domain.Shipping, java.lang.String>() {
            public String convert(Shipping shipping) {
                return new StringBuilder().append(shipping.getName()).append(' ').append(shipping.getAddress()).append(' ').append(shipping.getPostalCode()).append(' ').append(shipping.getDeliveryTime()).toString();
            }
        };
    }
    
    public Converter<Long, Shipping> ApplicationConversionServiceFactoryBean.getIdToShippingConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Long, com.springsource.roo.onlinebookstore.domain.Shipping>() {
            public com.springsource.roo.onlinebookstore.domain.Shipping convert(java.lang.Long id) {
                return Shipping.findShipping(id);
            }
        };
    }
    
    public Converter<String, Shipping> ApplicationConversionServiceFactoryBean.getStringToShippingConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, com.springsource.roo.onlinebookstore.domain.Shipping>() {
            public com.springsource.roo.onlinebookstore.domain.Shipping convert(String id) {
                return getObject().convert(getObject().convert(id, Long.class), Shipping.class);
            }
        };
    }
    
    public void ApplicationConversionServiceFactoryBean.installLabelConverters(FormatterRegistry registry) {
        registry.addConverter(getAuthorToStringConverter());
        registry.addConverter(getIdToAuthorConverter());
        registry.addConverter(getStringToAuthorConverter());
        registry.addConverter(getBooksToStringConverter());
        registry.addConverter(getIdToBooksConverter());
        registry.addConverter(getStringToBooksConverter());
        registry.addConverter(getCategoriesToStringConverter());
        registry.addConverter(getIdToCategoriesConverter());
        registry.addConverter(getStringToCategoriesConverter());
        registry.addConverter(getOrdersToStringConverter());
        registry.addConverter(getIdToOrdersConverter());
        registry.addConverter(getStringToOrdersConverter());
        registry.addConverter(getShippingToStringConverter());
        registry.addConverter(getIdToShippingConverter());
        registry.addConverter(getStringToShippingConverter());
    }
    
    public void ApplicationConversionServiceFactoryBean.afterPropertiesSet() {
        super.afterPropertiesSet();
        installLabelConverters(getObject());
    }
    
}
